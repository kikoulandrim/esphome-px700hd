esphome:
  name: px700hd
  platform: ESP8266
  board: d1_mini
  includes:
    - uart_read_px700hd.h

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
    ssid: "px700hd Fallback Hotspot"
    password: !secret ap_pwd

captive_portal:


logger:
  baud_rate: 0


api:


ota:


uart:
  id: uart_bus
  baud_rate: 9600
  tx_pin: TX
  rx_pin: RX
  stop_bits: 1

interval:
  - interval: 5s
    then:
      - uart.write: [0x07, 0x14, 0x00, 0x05, 0x00, 0x34, 0x00, 0x00, 0x11, 0x00, 0x5E]


sensor:
- platform: custom
  lambda: |-
      auto px700hd_sensor = new px700hdSensor(id(uart_bus));
      App.register_component(px700hd_sensor);
      return {px700hd_sensor};
  sensors:
    name: "px700hd State"
    id: sensuartpx700


switch:

  - platform: template
    name: "PX700HD"
    icon: mdi:projector
    lambda: |-
      if (id(sensuartpx700).state == 1) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
    - switch.turn_on: PX700HD_On
    turn_off_action:
    - switch.turn_on: PX700HD_Off
    optimistic: true

  - platform: uart
    id: "PX700HD_On"
    data: [0x06, 0x14, 0x00, 0x04, 0x00, 0x34, 0x11, 0x00, 0x00, 0x5D]

  - platform: uart
    id: "PX700HD_Off"
    data: [0x06, 0x14, 0x00, 0x04, 0x00, 0x34, 0x11, 0x01, 0x00, 0x5E]
